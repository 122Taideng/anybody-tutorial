# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, AnyBody Technology
# This file is distributed under the same license as the AnyBody Tutorials
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AnyBody Tutorials 7.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-08 15:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../Making_things_move/lesson3.rst:2
msgid "Lesson3: Noise and filters"
msgstr ""

#: ../../Making_things_move/lesson3.rst:4
msgid ""
"Let us run the Kinematics operation and investigate the results. After "
"the operation has completed, please open the Chart View tab and plot the "
"position vector of the pendulum as shown below:"
msgstr ""

#: ../../Making_things_move/lesson3.rst:8
msgid "|pendulum.r|"
msgstr ""

#: ../../Making_things_move/lesson3.rst:10
msgid ""
"The red, green and blue curves designate x, y and z locations "
"respectively of the center of mass of the pendulum. We see the expected "
"sinusoidal curves for x and y and a z location that is constantly zero. "
"It all looks fine and dandy, but closer investigation will reveal that it"
" is not."
msgstr ""

#: ../../Making_things_move/lesson3.rst:16
msgid ""
"If we plot the velocity, ``rDot``, rather than the position, we begin to "
"see the problem:"
msgstr ""

#: ../../Making_things_move/lesson3.rst:19
msgid "|pendulum.rdot|"
msgstr ""

#: ../../Making_things_move/lesson3.rst:21
msgid ""
"It is obvious that the motion is not as smooth as we would expect from "
"the first set of graphs, and it gets even worse if we plot the "
"accelerations, ``rDDot``:"
msgstr ""

#: ../../Making_things_move/lesson3.rst:25
msgid "|pendulum.rddot|"
msgstr ""

#: ../../Making_things_move/lesson3.rst:27
msgid ""
"Since forces in a mechanical system stem from accelerations, an analysis "
"of the force in this system would lead to a completely different result "
"than we would expect. The problem is due to noise in the measurements, "
"and noise is always present in several different forms. Although it can "
"be minimized by careful experimental procedures and good equipment, it "
"can never be completely removed. Therefore, it is always necessary to "
"filter motion capture data before use."
msgstr ""

#: ../../Making_things_move/lesson3.rst:35
msgid ""
"The ``AnyInputC3D`` class has a default filter built in. It is a special "
"case of a more general filter class in AnyBody, and the special case is a"
" second-order, zero-phase Butterworth filter with a cutoff frequency of "
"10 Hz. If you do not specify anything else, then this is what you are "
"going to get. In this case, it is obviously not sufficient, so let’s play"
" a bit with the settings and see whether we can get better results."
msgstr ""

#: ../../Making_things_move/lesson3.rst:42
msgid ""
"The filter section of the ``AnyInputC3D`` section is currently inactive. "
"Please remove the ``/* */`` surrounding the object, and you will have the"
" following:"
msgstr ""

#: ../../Making_things_move/lesson3.rst:61
msgid ""
"The first two lines pertain to the filter’s initial condition, and ``z0``"
" cannot be set when ``AutomaticInitialConditionOnOff`` is set to ``On``, "
"meaning that the initial condition of the filter gets computed "
"automatically."
msgstr ""

#: ../../Making_things_move/lesson3.rst:65
msgid ""
"The automatic computation is an attempt to minimize initial transients in"
" the signal, but it may not always be good enough, and in this case it "
"can be relevant to set the initial conditions. For now, let us keep the "
"automatic setting and therefore remove the incomplete line with ``z0``:"
msgstr ""

#: ../../Making_things_move/lesson3.rst:84
msgid ""
"The third line, ``FilterForwardBackwardOnOff``, is mostly included for "
"the sake of completeness. When it is set to ``On``, zero phase shift in "
"the filter is obtained by filtering twice, i.e. first forward and then "
"backward in the signal, which is the standard approach. Please leave it "
"as it is unless you really know what you are doing."
msgstr ""

#: ../../Making_things_move/lesson3.rst:90
msgid ""
"The property ``N`` is simply the order of the filter. The default value "
"is 2 and higher values lead to sharper cuts at the specified cutoff "
"frequency."
msgstr ""

#: ../../Making_things_move/lesson3.rst:94
msgid ""
"``W`` is the normalized cutoff frequency. Allowed values are between zero"
" and one with one corresponding to half of the sampling frequency. "
"However, it is not allowed to specify ``W`` when filtering data from a "
"C3D file because the file already contains information about the sampling"
" frequency, so you can safely delete this line."
msgstr ""

#: ../../Making_things_move/lesson3.rst:100
msgid ""
"``Fs`` is the sampling frequency, and like ``W``, we cannot specify it "
"when reading from a C3D file, so please remove this line."
msgstr ""

#: ../../Making_things_move/lesson3.rst:103
msgid ""
"``Fc`` is the cutoff frequency and is set to 10 Hz by default. The "
"dilemma with filters is always that they can reduce noise and other "
"undesirable elements of the signal, but in the process they also may "
"remove desirable parts of the signal or even introduce artifacts. 10 Hz "
"is a relatively safe value for experiments with human motion, but it "
"would obviously not be a safe choice if we were modeling insect motion or"
" other phenomena with higher frequency content."
msgstr ""

#: ../../Making_things_move/lesson3.rst:111
msgid ""
"Finally, the last line specifies the type of the filter as low pass, "
"which is the relevant value for a signal like this, where the noise is "
"high frequency, but the filters in AnyBody also allow for other types. "
"Please refer to the reference manual for a complete description."
msgstr ""

#: ../../Making_things_move/lesson3.rst:116
msgid ""
"In the graph of ``Pendulum.r`` above, the red curve seems to have a "
"frequency of about 0.2 Hz and the green curve about 0.4 Hz. This is "
"safely below our present 10 Hz cutoff frequency, so there seems to be "
"room to eliminate more noise by using a lower value of ``Fc``. If we "
"change"
msgstr ""

#: ../../Making_things_move/lesson3.rst:133
msgid "…we can get the following accelerations:"
msgstr ""

#: ../../Making_things_move/lesson3.rst:135
msgid "|pendulumfilt|"
msgstr ""

#: ../../Making_things_move/lesson3.rst:137
msgid ""
"They look much more reasonable, but notice that each end of the curve is "
"influenced by the initial conditions of the filter. Filters remove noise "
"but they are also sources of artifacts in the model and nothing is ever "
"completely perfect."
msgstr ""

#: ../../Making_things_move/lesson3.rst:142
msgid ""
"In this and the previous lesson we used the system’s ability to handle "
"over-constrained models to drive the pendulum with a marker that supplies"
" three constraints even though the pendulum only has one degree of "
"freedom. The additional information in the redundant constraints can be "
"used to our advantage for other purposes too, as we shall see in "
":doc:`Lesson 4 <lesson4>`."
msgstr ""

#: ../../Making_things_move/lesson3.rst:152
msgid "**Next lesson:** :doc:`lesson4`."
msgstr ""

#: ../../Making_things_move/lesson3.rst:169
msgid "noindex"
msgstr ""

