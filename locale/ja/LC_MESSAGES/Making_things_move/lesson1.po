# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, AnyBody Technology
# This file is distributed under the same license as the AnyBody Tutorials
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AnyBody Tutorials 7.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-08 15:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../Making_things_move/lesson1.rst:2
msgid "Lesson1: Simple drivers"
msgstr ""

#: ../../Making_things_move/lesson1.rst:4
msgid ""
"As mentioned above, we often have preconceived ideas about a system’s "
"natural DoFs, such as abduction of the shoulder or flexion of the knee. "
"In the case of the pendulum, we might get the idea that the natural DoF "
"is its rotational angle away from its resting vertical position. And we "
"can very easily drive the pendulum using this DoF."
msgstr ""

#: ../../Making_things_move/lesson1.rst:10
msgid ""
"The simplest mechanism of motion drivers in AnyBody is called "
"``AnyKinMotion``. With Pendulum.any open in an editor and the model "
"loaded, please place the cursor in the editor window just below then "
"ending brace of the ``AnySeg Pendulum`` definition. Then click the "
"Classes tab on the left-hand side of the editor window. Unfold the class "
"list and scroll down to find ``AnyKinMotion`` . Right-click and insert an"
" instance at the cursor position:"
msgstr ""

#: ../../Making_things_move/lesson1.rst:50
msgid ""
"The prototype of the ``AnyKinMotion`` class is set up to allow several "
"different options. But the simplest of these is to directly specify "
"something to drive and a function to drive it with. So we start out by "
"giving the object a name and removing all of its content."
msgstr ""

#: ../../Making_things_move/lesson1.rst:62
msgid "Then we specify what to drive by making reference to the pendulum joint:"
msgstr ""

#: ../../Making_things_move/lesson1.rst:72
msgid ""
"Now we have specified what to drive, so all that’s left is to create a "
"function to drive it with. AnyBody contains a number of predefined "
"function types that you can find in the Classes Tree, for instance "
"AnyFunPolynomial. As the name indicates, this is a polynomial function "
"and it can have any number of coefficients. A common use is to drive "
"motion either in a very standardized way, for instance with constant "
"velocity or constant acceleration, or to drive a motion by data to which "
"a polynomial has been fitted."
msgstr ""

#: ../../Making_things_move/lesson1.rst:81
msgid "Try inserting the red part of the code below:"
msgstr ""

#: ../../Making_things_move/lesson1.rst:94
msgid ""
"In the matrix ``PolyCoef``, each row contains the coefficients for a time"
" function driving one degree of freedom. The revolute joint we are "
"driving only has one degree of freedom, so the matrix only has one row, "
"but it still has to be defined as a matrix rather than a vector, i.e. "
"with double braces at each end. The polynomial coefficients then come in "
"increasing order and define the following driver function:"
msgstr ""

#: ../../Making_things_move/lesson1.rst:104
msgid "To get higher polynomial orders, simply add more terms to the vector."
msgstr ""

#: ../../Making_things_move/lesson1.rst:106
msgid ""
"Now try loading the model. If you have followed the instructions, you "
"should no longer get the warning that that model is kinematically "
"indeterminate. It now has the same number of drivers as degrees of "
"freedom."
msgstr ""

#: ../../Making_things_move/lesson1.rst:111
msgid ""
"Next, run the model. Select ``Main.MyStudy.Kinematics`` from the "
"Operations dropdown menu in the toolbar, and click the \"Run\" button:"
msgstr ""

#: ../../Making_things_move/lesson1.rst:116
msgid ""
"If you have a model view open, you should see the pendulum starting to "
"move and accelerate as it rotates a little more than one round before the"
" end of the analysis at *t* = 1 second."
msgstr ""

#: ../../Making_things_move/lesson1.rst:120
msgid ""
"The use of ``AnyKinMotion`` objects to drive a model is in principle "
"always like this, but you can select any Kinematic Measure to drive, i.e."
" not just a simple joint angle, and you can use any function derived from"
" the abstract AnyParamFun class to drive it with."
msgstr ""

#: ../../Making_things_move/lesson1.rst:125
msgid ""
"In :doc:`lesson 2 <lesson2>` we shall see how this same mechanism allows "
"you to drive the pendulum by motion capture data."
msgstr ""

#: ../../Making_things_move/lesson1.rst:131
msgid "**Next lesson:** :doc:`lesson2`."
msgstr ""

#: ../../Making_things_move/lesson1.rst:142
msgid "noindex"
msgstr ""

