# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, AnyBody Technology
# This file is distributed under the same license as the AnyBody Tutorials
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AnyBody Tutorials 7.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-08 15:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../Interface_features/lesson6.rst:2
msgid "Lesson 6: Modifying the Loaded Model"
msgstr ""

#: ../../Interface_features/lesson6.rst:4
msgid ""
"In this lesson, we shall take a look at the facilities that allows "
"modifying the model after it had been loaded (without changing the "
"AnyScript)"
msgstr ""

#: ../../Interface_features/lesson6.rst:9
msgid "Setting values"
msgstr ""

#: ../../Interface_features/lesson6.rst:11
msgid ""
"If you right click on an object in the Model Tree with the **(Editable)**"
" written in next to it, the context menu provides an option called “Set "
"Value”. Selecting this displays a dialog box where you can edit the "
"object’s value."
msgstr ""

#: ../../Interface_features/lesson6.rst:16
msgid ""
"However, there may be other model parameters that depend on this object "
"value, and these aren’t automatically updated. Objects having such "
"dependents are marked with an **(Editable*)**. The procedure for re-"
"computing these dependencies is described in the next section."
msgstr ""

#: ../../Interface_features/lesson6.rst:21
msgid ""
"“Set Value” is a Class Operation, which means that it can be summoned "
"from the console application if needed, as defined in the :doc:`previous "
"chapter <lesson5>`."
msgstr ""

#: ../../Interface_features/lesson6.rst:26
msgid "Resetting values"
msgstr ""

#: ../../Interface_features/lesson6.rst:28
msgid ""
"To reset all values to those described in AnyScript, right-click on the "
"“Main” object in the Model Tree and select “Reset Values”, which will "
"reset all values in the model. This action is also available from the "
"menu Operations > Reset All Values."
msgstr ""

#: ../../Interface_features/lesson6.rst:33
msgid ""
"“Reset values” is a Class Operation, which means that it can be summoned "
"from the console application if needed, as defined in the :doc:`previous "
"chapter <lesson5>`."
msgstr ""

#: ../../Interface_features/lesson6.rst:37
msgid "|Operations menu|"
msgstr ""

#: ../../Interface_features/lesson6.rst:40
msgid "Updating dependent values"
msgstr ""

#: ../../Interface_features/lesson6.rst:42
msgid ""
"As explained in the “Setting values” section above, all dependencies of "
"the updated object are not automatically updated. right-click on the "
"“Main” object in the Model Tree and select “Update Values”, which will "
"update all dependent values in the model."
msgstr ""

#: ../../Interface_features/lesson6.rst:47
msgid ""
"Moreover, it is also available from the menu Operations->Update All "
"Values (see also the image above). “Update values” is a Class Operation, "
"which means that it can be summoned from the console application if "
"needed, as defined in the previous chapter."
msgstr ""

#: ../../Interface_features/lesson6.rst:53
msgid "Storing Modified Values – Saving and Loading Values"
msgstr ""

#: ../../Interface_features/lesson6.rst:55
msgid ""
"Modified values are not saved back into the AnyScript source code, and in"
" the general case, this is not possible. However, the Main folder is "
"equipped with two Class Operations, one for saving (“Save Values”) and "
"one for loading values (“Load Values”). These functions are also "
"available from the menu Operations->Save Modified Values and "
"Operations->Load Modified Values, respectively. The saving operation "
"saves all values that are marked as modified to a file. It is a simple "
"text-based file that can be opened and modified in a text/AnyScript "
"editor. Also, it can be included in the model source, at least if the "
"values are not initialized in the original code (or this initialization "
"is removed)."
msgstr ""

#: ../../Interface_features/lesson6.rst:67
msgid ""
"The file can later be read into the same model (or a similar model) using"
" the loading operation. This operation will load all the values in the "
"same objects (by using the complete name), and it will mark all these "
"value objects as modified. It will basically be as if you apply “Set "
"Value” manually to all the value-objects in question. This means that no "
"automatic updating is carried out by the loading operation."
msgstr ""

#: ../../Interface_features/lesson6.rst:77
msgid "**Next lesson:** :doc:`lesson7`."
msgstr ""

#: ../../Interface_features/lesson6.rst:91
msgid "noindex"
msgstr ""

