# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, AnyBody Technology
# This file is distributed under the same license as the AnyBody Tutorials
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AnyBody Tutorials 7.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-08 15:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:2
msgid "Making the translated AnyScript model move"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:4
msgid ""
"If you did not finish the previous lesson, you can download the finished "
"AnyScript model file here: :download:`FitnessMachine\\_Mate\\_Config1.zip"
" <Downloads/FitnessMachine_Mate_Config1.zip>`"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:9
msgid "Add an AnyBodyStudy object and a kinematic motion driver"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:11
msgid ""
"As previously mentioned, the exported model comes out of SOLIDWORKS and "
"into AnyBody with one degree-of-freedom. In this lesson, we add a driver "
"to this degree-of-freedom and thereby make the exercise machine move "
"inside AnyBody."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:16
msgid ""
"We will make these additions to the model in the Main file, but since "
"‘FitnessMachine.main.any’ was generated by the AnyBody Exporter™ for "
"SOLIDWORKS® (AnyExp4SOLIDWORKS™) and will be overwritten next time we "
"update the translation, we shall make our own copy before editing. We "
"call this new Main file ‘My.FitnessMachine.main.any’."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:22
msgid ""
"The first step is to add a study object to the Main file. The study "
"contains the necessary operations that will perform a kinematic analysis,"
" which is the way how AnyBody moves the model. Let us add an AnyBodyStudy"
" object to make this model work for kinematic and inverse dynamic "
"analyses."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:47
msgid ""
"Notice how the 'FitnessMachine' folder is added by a reference so that "
"the study object \"knows the model\" that it must study."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:50
msgid ""
"The next step is to add a motion driver to determine the position of the "
"single degree-of-freedom at every time step and thereby the entire "
"mechanism. The logical and simple choice is to drive the angle of the "
"flywheel. As we saw before, the imported model in AnyBody is almost "
"completely equivalent in structure to the SOLIDWORKS model, so we can use"
" the latter to look for a place to attach the driver."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:57
msgid "|SolidWorks components|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:59
msgid ""
"The ‘Concentric01’ mate is a relationship between two cylindrical faces "
"of the ‘MainBase<1>’ and ‘MainCylinder<1>’ components. This mate contains"
" two linear and two rotational constraints between two different "
"components. So this mate can still allow two degrees of freedom: 1 "
"translational and 1 rotational movement. Let us look the definition of "
"this ‘Concentric01’ mate inside AnyScript."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:94
msgid ""
"We can see that there is one AnyKinLinear and one AnyKinRotational "
"kinematic measure for this mate. The rotation is obviously related to the"
" AnyKinRotational object so let us use this to define a kinematic driver."
" We can do this because the rotational measure 'rot' is already measuring"
" the angle; the 'PlanarAngles' type gives us one real angle and two "
"special out-of-plane measurements, which are already constrained to be "
"zero, i.e. in-plane, by the translated code. The remaining real angle, "
"i.e. the first component of the 'rot' measure, can be constrained by a "
"driver. We add this to the FitnessMachine AnyFolder from the Main file."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:137
msgid "If you load this modified model, you will see the following warnings."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:139
msgid ""
"“Model Warning: Study 'Main.Study' contains more reaction forces than "
"rigid-body degrees of freedom of the segments. The model may be "
"statically indeterminate. There are 122 reactions and only 96 rigid body "
"degrees of freedom.”"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:144
msgid ""
"Also, if you try to run InverseDynamics analysis for this model, it will "
"cause some kinematic errors. The reason for these warnings and errors is "
"that there are redundant mates, i.e. there are more kinematic constraints"
" than necessary to constrain the model. This is generally unsound and "
"these additional constraints should be eliminated. There is a simple way "
"to try to solve this situation in AnyBody without changing the SOLIDWORKS"
" model. We shall try this first."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:152
msgid ""
"Firstly, we change the solver type of the AnyBodyStudy object and the "
"constraint type of all constraints in the translated model:"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:171
msgid ""
"And in the ‘FitnessMachine.any’ file we change the type of all kinematic "
"constraints created from mates in the SOLIDWORKS model."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:183
msgid ""
"The significance of these new specifications is to switch to a kinematic "
"solver algorithm that allows violation of kinematic constraints if these "
"are considered soft, and therefore we define all of the constraints "
"indiscriminately as 'Soft'."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:188
msgid ""
"After reloading the model, you may be able to run Kinematics or "
"InverseDynamics analysis. But this modification of solver and constraints"
" types ‘does not’ guarantee the successful performance of kinematic "
"analysis. Even if you can run your over-constrained model successfully, "
"there is one significant remaining problem: Generally speaking, if there "
"are redundant constraints in your model, it implies that there are also "
"redundant reaction forces in your models, since kinematic constraints and"
" reaction forces are connected one-to-one. In this case, there may not be"
" a unique solution for those unknown reaction terms to be found by the "
"InverseDynamics analysis."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:199
msgid ""
"Having too many reactions in a rigid-body dynamics model is similar to "
"what is called \"statically indeterminacy\" in structural mechanics. To "
"solve such problems, you need to know about the structural deformations "
"to establish the reaction forces and this involves the stiffness of the "
"structures, which we do not have or use in the rigid-body dynamic "
"analysis. To make a unique solution of the forces in rigid-body dynamics,"
" we must reduce the constraint reactions to match the independent set of "
"constraints. In other words, we must remove the redundant constraints and"
" thereby their reactions."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:209
msgid ""
"You may ask whether this is a choice of mathematical convenience for the "
"solvers to handle the problem? It is indeed mathematically convenient, "
"but it is also sound engineering practice in mechanism design not to make"
" you mechanisms over-constrained, not even if it is redundant "
"constraints. Manufacturing tolerances could make redundant constraints "
"actually conflict, leading to mechanism locking and extensive wear. "
"Therefore sound engineering design is to make sure that constraints and "
"reactions do not conflict and it is your task to introduce these "
"engineering design decisions properly into your models."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:219
msgid ""
"There are two ways to approach this task: editing your AnyScript model "
"directly or editing your mate definitions in SOLIDWORKS and re-exporting "
"it. We shall here adopt the latter approach."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:224
msgid "Removing redundant mates in SOLIDWORKS before doing the translation"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:226
msgid ""
"If your SOLIDWORKS CAD model has a very complex structure, then it may be"
" difficult to modify the AnyScript model to remove the redundant "
"constraints. Furthermore, in an interactive design process, you may wish "
"to work with the SOLIDWORKS model and re-export it repeatedly to AnyBody."
" In this case, it is probably a better choice to solve the redundancy "
"problem directly in the CAD system."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:233
msgid ""
"For this purpose, the SOLIDWORKS example model has already been set up "
"with different configurations. If you open the previous "
":download:`FitnessMachine\\_SOLIDWORKS.zip "
"<Downloads/FitnessMachine_SolidWorks.zip>` file again in SOLIDWORKS, then"
" you can create a new configuration and start changing its mate "
"definitions. We have in this model file already created two new "
"configurations with the results of the modification we suggest to remove "
"kinematic redundancy."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:241
msgid "|AnyExp2Solidworks Configuration|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:243
msgid "|SolidWorks Tree view|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:245
msgid ""
"We can find the main reason of mate redundancy in SOLIDWORKS by examining"
" several mates, which are used between two different parts in the "
"assembly."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:249
msgid ""
"Firstly, let us look at two mates at the ‘Mate\\_Config1’ configuration "
"of the top assembly. All the mates which were used in this configuration "
"can be classified as one of the standard mate types of SOLIDWORKS. Let us"
" find the mates, which are defined between the ‘MainBase<1>’ and "
"‘BeamType2<1>’ components."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:256
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:283
msgid "**Mate Type**"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:256
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:283
msgid "**Mate Name in the SOLIDWORKS feature tree**"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:256
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:283
msgid "**Related Components**"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:256
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:283
msgid "**Mate Entity Types**"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:256
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:283
msgid "**Snapshot**"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:258
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:285
msgid "Coincident"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:258
msgid "Coincident12"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:258
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:262
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:285
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:289
msgid "MainBase<1>"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:258
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:260
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:285
msgid "Plane"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:258
msgid "|Matetype 1|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:260
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:264
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:287
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:291
msgid "BeamType2<1>"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:262
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:289
msgid "Concentric"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:262
msgid "Concentric12"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:262
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:264
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:289
#: ../../AnyExp4SOLIDWORKS/lesson2.rst:291
msgid "Cylinder"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:262
msgid "|Matetype 2|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:267
msgid ""
"The intention of using these two mates is to replicate a revolute (hinge)"
" joint between the ‘MainBase<1>’ and ‘BeamType2<1>’ parts. So we used a "
"Coincident (Plane-Plane) and a Concentric (Cylinder-Cylinder) mate for "
"this purpose. A Coincident (Plane-Plane) mate contains 1 linear and 2 "
"rotational constraints, and a Concentric (Cylinder-Cylinder) mate "
"contains 2 linear and 2 rotational constraints. So the sum of constraints"
" from these two mates is 7 constraints. But a revolute (hinge) joint "
"should contain 3 linear and 2 rotational constraints. So by introducing "
"these two mates this way, there will be 2 redundant rotational "
"constraints."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:278
msgid ""
"Then, let us find the mates defined between the ‘MateBase<1>’ and "
"‘BeamType2<1>’ components in the ‘Mate\\_Config2’ assembly configuration "
"setting."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:285
msgid "Coincident\\_V\\_Beam\\_Back\\_Left"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:285
msgid "|Matetype 3|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:287
msgid "Point"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:289
msgid "Concentric\\_V\\_Beam\\_Back\\_Left"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:289
msgid "|Matetype 4|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:294
msgid ""
"In this ‘Mate\\_Config2’ configuration, we used a Coincident (Point-"
"Plane) and a Concentric (Cylinder-Cylinder) mate instead. A Coincident "
"(Point-Plane) mate contains only 1 linear constraint. So the sum of "
"constraints from these two mates are 5 (3 linear and 2 rotational). Then "
"the combination of these two mates will work the same as a revolute "
"joint. If you prefer to use the standard mate types of SOLIDWORKS, then "
"you can create revolute joints using a Coincident (Point-Plane) and a "
"Concentric (Cylinder-Cylinder) mate. Or you can use a Coincident (Plane-"
"Plane) and a Concentric (Point-Cylinder) mate instead."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:305
msgid ""
"A good feature of SOLIDWORKS, is that SOLIDWORKS can handle some amount "
"of redundant mates if they are well defined, but since we are really "
"interested in the reaction forces of your mechanism, then it is important"
" for us to eliminate the redundancy of mates in the models completely."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:311
msgid ""
"In the second configuration, ‘Mate\\_Config2’, we have applied more "
"similar changes until the model is well-defined without redundant "
"constraints. Basically almost all joints in the model are hinges from a "
"first look and therefore they all need to be reduced to having only five "
"constraints, like explained above. However, it turns out that this is not"
" enough to remove redundancy. What is still missing is that we have "
"closed loops, and making a closed loop with only hinges only works here "
"because all hinges are parallel. In other words, we have a planar "
"mechanism, but if the hinges were not parallel the mechanism would be "
"locked or maybe not even possible to assemble. Some of the \"hinges\" "
"have here been further reduced so they match what in AnyBody is called a "
"trans-spherical joint (AnyTransSphericalJoint), i.e., a spherical joint "
"which also allows one translation, here along the hinge axis. These joint"
" have only two translational constraints, which implies that they do not "
"carry moments or an axial force."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:327
msgid ""
"The selection of these reduced joints, has been made based on the actual "
"joints in the machine, or the assumed actual joints, since this is "
"constructed case. So the \"strong\" hinge with good hinge bearings are "
"made as real hinges, while \"less strong\" joints with clearances and "
"simpler bearings are made as trans-spherical joints."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:333
msgid ""
"In the SolidWork assembly, ‘Mate\\_Config2’, you can see our choices. We "
"have tried to make it visible by making the \"real hinges\" with a real "
"cylindrical part fitting a cylindrical hole, whereas the \"reduced "
"hinges\" have a reduced graphical representation like empty holes or "
"nothing."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:339
msgid ""
"There is a slightly alternative way to reduce mate redundancy. You can "
"use some of the mechanical mate types of SOLIDWORKS. Let us change the "
"assembly configuration to ‘Mate\\_Config3’ as follows. Here we have "
"entered topologically the same joint configuration as in "
"‘Mate\\_Config2’, but using the mechanical mates as much as possible. We "
"have named the mates according to the joint type we want to realize. The "
"trans-spherical joint type does not exist in SOLIDWORKS, so this has been"
" created with standard mates as in ‘Mate\\_Config2’."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:348
msgid "|AnyExp2Solidworks Config 2|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:350
msgid "|Solidworks tree 2|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:352
msgid ""
"As you can see in ‘Mate\\_Config3’, the usage of Hinge mates reduces the "
"total number of mates because a hinge mate requires four mate entities "
"when it is defined with standard mates. The trans-spherical constraint is"
" however realized simply by a Concentric(Point-Cylinder) mate. It will "
"work the same as the AnyTransShericalJoint in AnyBody, but the "
"AnyExp4SOLIDWORKS translator does not realize that it is a joint and will"
" only make a simple object with kinematic constraints as we saw in Lesson"
" 1."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:361
msgid ""
"We prefer the solution in ‘Mate\\_Config3’, since this approach is closer"
" to concepts we normally use with AnyBody, but ‘Mate\\_Config2’ and "
"‘Mate\\_Config3’ are mechanically equivalent."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:366
msgid "Translate a SOLIDWORKS assembly which doesn’t have any redundant mates"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:368
msgid ""
"Let us translate the assembly under the ‘Mate\\_Config3’ configuration "
"into an AnyScript model by using AnyExp4SOLIDWORKS like you did in Lesson"
" 1. You can now open the model with the newly generated "
"‘FitnessMachine.main.any’ file, where you will see the model or you can "
"open your own version ‘My.FitnessMachine.main.any’ file where you added "
"the study object and the rotation driver. The latter model will now work,"
" i.e., you can run the 'Kinematics' operation in the 'Study', and it will"
" do one revolution of the machine. You can also run the 'InverseDynamics'"
" without any complaints."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:378
msgid ""
"In order to do a simple review of the degrees of freedom of the "
"translated model try removing the driver, or just add the study to the "
"generated ‘FitnessMachine.main.any’, so you load a file like this:"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:401
msgid "When you load this model, then you will see the following warning message:"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:404
msgid ""
"*Model Warning: Study 'Main.Study' contains too few kinematic constraints"
" to be kinematically determinate.*"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:407
msgid "Let us see the object description of the AnyBodyStudy object."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:409
msgid "|AnyBody Study object description|"
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:411
msgid ""
"This assembly contains 16 components, i.e. segments. So this assembly has"
" a total 96 degrees of freedom when disregarding the constraints. But "
"then a total number of constraints from the mates of 95 is removed, which"
" means that only 1 degree of freedom is left. This is as expected for the"
" mechanism and this is the degree of freedom driven by the driver, we "
"have previously added."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:418
msgid ""
"You can successfully run the 'Kinematics' and 'InverseDynamics' "
"operations of the AnyBodyStudy object and we are now ready to adding the "
"human to the model in the final :doc:`Lesson 3 <lesson3>`."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:424
msgid "**Next lesson:** :doc:`lesson3`."
msgstr ""

#: ../../AnyExp4SOLIDWORKS/lesson2.rst:447
msgid "noindex"
msgstr ""

